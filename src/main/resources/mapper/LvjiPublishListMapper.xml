<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzj.muxin.mapper.LvjiPublishListMapper">
  <resultMap id="BaseResultMap" type="com.zzj.muxin.domain.LvjiPublishList">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="publish_content" jdbcType="VARCHAR" property="publishContent" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="publish_location" jdbcType="VARCHAR" property="publishLocation" />
    <result column="publish_city" jdbcType="VARCHAR" property="publishCity" />
    <result column="publish_topic" jdbcType="VARCHAR" property="publishTopic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzj.muxin.domain.LvjiPublishList">
    <result column="picture_url_list" jdbcType="LONGVARCHAR" property="pictureUrlList" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, update_at, comment_num, like_num, publish_content, user_id, publish_location, 
    publish_city, publish_topic
  </sql>
  <sql id="Blob_Column_List">
    picture_url_list
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzj.muxin.domain.LvjiPublishListExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lvji_publish_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzj.muxin.domain.LvjiPublishListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lvji_publish_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zzj.muxin.domain.LvjiPublishListExample">
    delete from lvji_publish_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzj.muxin.domain.LvjiPublishList">
    insert into lvji_publish_list (id, create_at, update_at, 
      comment_num, like_num, publish_content, 
      user_id, publish_location, publish_city, 
      publish_topic, picture_url_list)
    values (#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{commentNum,jdbcType=INTEGER}, #{likeNum,jdbcType=INTEGER}, #{publishContent,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{publishLocation,jdbcType=VARCHAR}, #{publishCity,jdbcType=VARCHAR}, 
      #{publishTopic,jdbcType=VARCHAR}, #{pictureUrlList,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.muxin.domain.LvjiPublishList">
    insert into lvji_publish_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="publishContent != null">
        publish_content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="publishLocation != null">
        publish_location,
      </if>
      <if test="publishCity != null">
        publish_city,
      </if>
      <if test="publishTopic != null">
        publish_topic,
      </if>
      <if test="pictureUrlList != null">
        picture_url_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="publishContent != null">
        #{publishContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="publishLocation != null">
        #{publishLocation,jdbcType=VARCHAR},
      </if>
      <if test="publishCity != null">
        #{publishCity,jdbcType=VARCHAR},
      </if>
      <if test="publishTopic != null">
        #{publishTopic,jdbcType=VARCHAR},
      </if>
      <if test="pictureUrlList != null">
        #{pictureUrlList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzj.muxin.domain.LvjiPublishListExample" resultType="java.lang.Long">
    select count(*) from lvji_publish_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lvji_publish_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentNum != null">
        comment_num = #{record.commentNum,jdbcType=INTEGER},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.publishContent != null">
        publish_content = #{record.publishContent,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.publishLocation != null">
        publish_location = #{record.publishLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.publishCity != null">
        publish_city = #{record.publishCity,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTopic != null">
        publish_topic = #{record.publishTopic,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureUrlList != null">
        picture_url_list = #{record.pictureUrlList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update lvji_publish_list
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      comment_num = #{record.commentNum,jdbcType=INTEGER},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      publish_content = #{record.publishContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      publish_location = #{record.publishLocation,jdbcType=VARCHAR},
      publish_city = #{record.publishCity,jdbcType=VARCHAR},
      publish_topic = #{record.publishTopic,jdbcType=VARCHAR},
      picture_url_list = #{record.pictureUrlList,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lvji_publish_list
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      comment_num = #{record.commentNum,jdbcType=INTEGER},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      publish_content = #{record.publishContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      publish_location = #{record.publishLocation,jdbcType=VARCHAR},
      publish_city = #{record.publishCity,jdbcType=VARCHAR},
      publish_topic = #{record.publishTopic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>